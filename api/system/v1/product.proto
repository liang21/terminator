syntax = "proto3";
package terminator.api.system.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "api/system-service/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Terminator System Project API"
    version: "v1.0.0"
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
};

service ProductService {
  rpc CreateProduct (CreateProductRequest) returns (CreateProductReply) {
    option (google.api.http) = {
      post: "/api/v1/product"
      body: "*"
    };
  }
  rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductReply) {
    option (google.api.http) = {
      put: "/api/v1/product/{id}"
      body: "*"
    };
  }
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductReply) {
    option (google.api.http) = {
      delete: "/api/v1/product/{id}"
    };
  }
  rpc GetProduct (GetProductRequest) returns (GetProductReply) {
    option (google.api.http) = {
      get: "/api/v1/product/{id}"
    };
  }
  rpc ListProduct (ListProductRequest) returns (ListProductReply) {
    option (google.api.http) = {
      get: "/api/v1/products"
    };
  }
}

message Product {
  int64 id = 1;
  string name = 2;
  string description = 3;
}


message CreateProductRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}]; // the name of string must be between 5 and 50 character
  string description = 2 ;
}

message CreateProductReply {
  Product product = 1;
}

message UpdateProductRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  string name = 2 [(validate.rules).string = {min_len: 1, max_len: 50}]; // the name of string must be between 5 and 50 character
  string description = 3 ;
}

message UpdateProductReply {
  Product product = 1;
}

message DeleteProductRequest {
  int64 id = 1;
}
message DeleteProductReply {
}

message GetProductRequest {
  int64 id = 1;
}

message GetProductReply {
  Product product = 1;
}

message ListProductRequest {
  string parent = 1;
  int32 page_size = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={description: "页大小"}];
  string page_token = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={description: "当前页码"}];
}

message ListProductReply {
  int64 total = 1;
  repeated Product results = 2;
}
