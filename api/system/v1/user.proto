syntax = "proto3";
package terminator.api.system.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "api/system/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Terminator System User API"
    version: "v1.0.0"
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
};

service UserService {
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/api/v1/user"
      body: "*"
    };
  }
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/api/v1/user/{id}"
      body: "*"
    };
  }
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/api/v1/user/{id}"
    };
  }
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/api/v1/user/{id}"
    };
  }
  rpc ListUser (ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/api/v1/user/list"
    };
  }
}

message User {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  int64 role_id = 5;
  string password = 6;
}

message CreateUserRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}]; // the name of string must be between 5 and 50 character
  string email = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string phone = 3 [(validate.rules).string = {min_len: 1, max_len: 11}];
  int64 role_id = 4;
  string password = 5[(validate.rules).string = {min_len: 1, max_len: 11}];
}

message CreateUserReply {
  User user = 1;
}

message UpdateUserRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  string name = 2 [(validate.rules).string = {min_len: 1, max_len: 50}]; // the name of string must be between 5 and 50 character
  string email = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string phone = 4 [(validate.rules).string = {min_len: 1, max_len: 11}];
  int64 role_id = 5;
  string password = 6[(validate.rules).string = {min_len: 1, max_len: 11}];
}

message UpdateUserReply {
  User user = 1;
}

message DeleteUserRequest {
  int64 id = 1;
}
message DeleteUserReply {
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserReply {
  User user = 1;
}

message ListUserRequest {
  int64 page_size = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={description: "页大小"}];
  int64 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={description: "当前页码"}];
}

message ListUserReply {
  int64 total = 1;
  repeated User results = 2;
}